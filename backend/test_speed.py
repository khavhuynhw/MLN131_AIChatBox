#!/usr/bin/env python3
"""
Script test t·ªëc ƒë·ªô response c·ªßa AI backend
"""
import time
import requests
import json

def test_chat_speed():
    """Test t·ªëc ƒë·ªô response c·ªßa chat API"""
    url = "http://localhost:8000/chat"
    
    test_questions = [
        "Ch·ªß nghƒ©a x√£ h·ªôi l√† g√¨?",
        "Th·ªùi k·ª≥ qu√° ƒë·ªô l√™n ch·ªß nghƒ©a x√£ h·ªôi c√≥ ƒë·∫∑c ƒëi·ªÉm g√¨?",
        "ƒêi·ªÅu ki·ªán ra ƒë·ªùi c·ªßa ch·ªß nghƒ©a x√£ h·ªôi?",
        "C√°c ƒë·∫∑c tr∆∞ng b·∫£n ch·∫•t c·ªßa ch·ªß nghƒ©a x√£ h·ªôi?",
        "Vai tr√≤ c·ªßa ƒê·∫£ng C·ªông s·∫£n trong th·ªùi k·ª≥ qu√° ƒë·ªô?"
    ]
    
    print("üöÄ Testing AI Response Speed...")
    print("=" * 50)
    
    total_time = 0
    successful_requests = 0
    
    for i, question in enumerate(test_questions, 1):
        print(f"\nüìù Test {i}/5: {question}")
        
        payload = {
            "question": question,
            "username": "test_user"
        }
        
        try:
            start_time = time.time()
            response = requests.post(url, json=payload, timeout=30)
            end_time = time.time()
            
            response_time = end_time - start_time
            total_time += response_time
            successful_requests += 1
            
            if response.status_code == 200:
                data = response.json()
                answer_length = len(data.get('answer', ''))
                print(f"‚úÖ Success: {response_time:.2f}s | Answer length: {answer_length} chars")
            else:
                print(f"‚ùå Error {response.status_code}: {response.text}")
                
        except requests.exceptions.Timeout:
            print(f"‚è∞ Timeout after 30s")
        except Exception as e:
            print(f"‚ùå Error: {e}")
    
    if successful_requests > 0:
        avg_time = total_time / successful_requests
        print(f"\nüìä RESULTS:")
        print(f"   Successful requests: {successful_requests}/5")
        print(f"   Average response time: {avg_time:.2f}s")
        print(f"   Total time: {total_time:.2f}s")
        
        if avg_time < 3:
            print("üü¢ Speed: EXCELLENT (< 3s)")
        elif avg_time < 5:
            print("üü° Speed: GOOD (3-5s)")
        elif avg_time < 10:
            print("üü† Speed: ACCEPTABLE (5-10s)")
        else:
            print("üî¥ Speed: SLOW (> 10s)")
    else:
        print("‚ùå No successful requests")

if __name__ == "__main__":
    test_chat_speed()
