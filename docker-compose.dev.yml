version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hcm-postgres-dev
    environment:
      POSTGRES_DB: hcm_chatbot_dev
      POSTGRES_USER: hcm_user
      POSTGRES_PASSWORD: hcm_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"  # Different port for dev
    networks:
      - hcm-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hcm_user -d hcm_chatbot_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python AI Backend (FastAPI) - Development
  python-ai:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hcm-python-ai-dev
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
    ports:
      - "8001:8000"  # Different port for dev
    volumes:
      - ./backend:/app
      - /app/venv  # Exclude venv from volume mount
    networks:
      - hcm-dev-network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  # .NET API - Development
  dotnet-api:
    build:
      context: ./dotnet-api/hcm-chatbot-api
      dockerfile: Dockerfile
    container_name: hcm-dotnet-api-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=hcm_chatbot_dev;Username=hcm_user;Password=hcm_password
      - JWT__SecretKey=${JWT_SECRET_KEY:-dev-secret-key}
      - JWT__Issuer=HCM-Chatbot-Dev
      - JWT__Audience=HCM-Chatbot-Users-Dev
    ports:
      - "5001:5000"  # Different port for dev
    volumes:
      - ./dotnet-api/hcm-chatbot-api:/src
    networks:
      - hcm-dev-network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["dotnet", "watch", "run", "--project", "WebApplication.csproj", "--urls", "http://0.0.0.0:5000"]
    restart: unless-stopped

  # Frontend - Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hcm-frontend-dev
    ports:
      - "3001:3000"  # Different port for dev
    volumes:
      - ./frontend:/usr/share/nginx/html
    networks:
      - hcm-dev-network
    depends_on:
      - dotnet-api
      - python-ai
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local

networks:
  hcm-dev-network:
    driver: bridge

